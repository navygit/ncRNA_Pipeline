package Bio::EnsEMBL::Analysis::Config::Exonerate2Genes;

use strict;
use vars qw(%Config);
%Config = (
           EXONERATE_CONFIG_BY_LOGIC => {
             DEFAULT => {
               GENOMICSEQS         => '/data/blastdb/Ensembl/Large/Gallus_gallus/WASHUC1/softmasked_dusted/Gallus_gallus.WASHUC1.softmasked.fa',
               QUERYTYPE           => undef,
               QUERYSEQS           => undef,
               IIDREGEXP           => undef,
               OUTDB               => undef,
               FILTER              => undef,
               COVERAGE_BY_ALIGNED => undef,
               OPTIONS             => undef,
	       NONREF_REGIONS      => 1,
             },
             duck_cDNA_update => {
	       GENOMICSEQS         => '/data/blastdb/Ensembl/Large/Gallus_gallus/WASHUC1/softmasked_dusted/Gallus_gallus.WASHUC1.softmasked.fa',
               QUERYTYPE           => 'dna',
               QUERYSEQS           => '/nfs/acari/jb16/projects/Anasp/chunks',
               OUTDB               => { -dbname => 'jb16_cDNA_update_8_low',
                                        -host   => 'ia64g',
                                        -port   => '3306',
                                        -user   => 'ensadmin',
                                        -pass   => 'ensembl',
                                       },
               COVERAGE_BY_ALIGNED => 1,               
               FILTER              => { OBJECT     => 'Bio::EnsEMBL::Analysis::Tools::ExonerateTranscriptFilter',
                                        PARAMETERS => {
                                                           -coverage => 10,
                                                           -percent_id => 30,
							   -best_in_genome => 1,	
                                                           -reject_processed_pseudos => 1,
                                                      },
                                       },
               OPTIONS             => "--model est2genome --forwardcoordinates FALSE --softmasktarget TRUE --exhaustive FALSE --score 300 --saturatethreshold 100 --dnahspthreshold 60 --dnawordlen 12",
             }
           }
);



  sub import {
    my ($callpack) = caller(0);
    my $pack = shift;
    my @vars = @_ ? @_ : keys(%Config);
    return unless @vars;
    eval "package $callpack; use vars qw(".
      join(' ', map { '$'.$_ } @vars) . ")";
    die $@ if $@;
    foreach (@vars) {
      if (defined $Config{ $_ }) {
        no strict 'refs';
	*{"${callpack}::$_"} = \$Config{ $_ };
      }else {
	die "Error: Config: $_ not known\n";
      }
    }
  }
  1;
